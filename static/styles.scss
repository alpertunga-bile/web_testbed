@tailwind base;
@tailwind components;
@tailwind utilities;



/*
 * -------------------------------------------------------------------------------------
 * -- Animated List
*/

.animated_li {
  list-style: none;
  background: blueviolet;
  color: white;
  height: 0;
  line-height: 2em;
  margin: 0;
  padding: 0 0.5em;
  overflow: hidden;
  width: 10em;
  will-change: height margin opacity transform;
}

.animated_li.show {
  height: 2em;
  margin: 2px 0;
}

.fade li {
  transition: all 0.4s ease-out;
  opacity: 0;
  height: 2em;
}

.fade .animated_li.show {
  opacity: 1;
}

.slide-fade li {
  transition: all 0.4s ease-out;
  opacity: 0;
}

.slide-fade .animated_li.show {
  opacity: 1;
}

.swing {
  perspective: 100px;
}

.swing li {
  opacity: 0;
  transform: rotateX(-90deg);
  transition: all 0.5s ease-in;
}

.swing .animated_li.show {
  opacity: 1;
  transform: none;
  transition: all 0.5s ease-out;
}

/*
 * -------------------------------------------------------------------------------------
 * -- Buffer Loading
*/

$loading-loaded-color: rgb(222, 24, 205);
$loading-unloaded-color: rgba(178, 178, 178, 0);
$loading-text-loaded-color: rgb(24, 64, 222);
$loading-text-unloaded-color: rgba(178, 178, 178, 0);

@keyframes layer1 {
  0%, 65% {
    fill: $loading-unloaded-color;
    color: $loading-text-unloaded-color;
  }
  75%, 85% {
    fill: $loading-loaded-color;
    color: $loading-text-loaded-color;
  }
  92%, 100% {
    fill: $loading-unloaded-color;
    color: $loading-text-unloaded-color;
  }
}

@keyframes layer2 {
  0%, 40% {
    fill: $loading-unloaded-color;
    color: $loading-text-unloaded-color;
  }
  50%, 86% {
    fill: $loading-loaded-color;
    color: $loading-text-loaded-color;
  }
  93%, 100% {
    fill: $loading-unloaded-color;
    color: $loading-text-unloaded-color;
  }
}

@keyframes layer3 {
  0%, 15% {
    fill: $loading-unloaded-color;
    color: $loading-text-unloaded-color;
  }
  25%, 90% {
    fill: $loading-loaded-color;
    color: $loading-text-loaded-color;
  }
  100% {
    fill: $loading-unloaded-color;
    color: $loading-text-unloaded-color;
  }
}

.layer {
  animation: 4s linear infinite;
}

.layer1 {
  animation-name: layer1;
  will-change: fill color;
}

.layer2 {
  animation-name: layer2;
  will-change: fill color;
}

.layer3 {
  animation-name: layer3;
  will-change: fill color;
}

/*
 * -------------------------------------------------------------------------------------
 * -- Animated Link
*/

.animated_link {
  color: aqua;
  text-decoration: none;
  background-image: linear-gradient(
    currentColor,
    currentColor
  );
  background-position: 0% 100%;
  background-repeat: no-repeat;
  background-size: 0% 4px;
  transition: background-size cubic-bezier(0, 0.5, 0, 1) 0.3s;
  will-change: background-size;
}

.animated_link:hover,
.animated_link:focus {
  text-decoration: none;
  background-size: 100% 4px;
}


/*
 * -------------------------------------------------------------------------------------
 * -- Circle Animation
*/

$animated-circle-radius: 1.5em;

.animated_circle {
  position: absolute;
  width: $animated-circle-radius;
  height: $animated-circle-radius;
  border-radius: 100%;
  background-color:aquamarine;
  transform-origin: center center;
  animation: move-circle-fade 4s infinite;
  opacity: 0;
  will-change: transform opacity width height;
}

@for $num from 1 through 8 {
  .animated_circle:nth-child(#{$num}) {
      animation-delay: $num * 0.5s;
  }
}

.animated_circle_parent {
  animation: move-parent 4s linear infinite;
  will-change: transform;
}

@keyframes move-parent {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

@keyframes move-circle-fade {
    0% {
      transform: translate(50px, 50px);
      opacity: 1;
      width: $animated-circle-radius;
      height: $animated-circle-radius;
    }

    12% {
      transform: rotateZ(45deg) translate(50px, 50px);
      opacity: 1 - calc(1 / 8);
      width: $animated-circle-radius - calc($animated-circle-radius * (1 / 8));
      height: $animated-circle-radius - calc($animated-circle-radius * (1 / 8));
    }
    
    25% {
      transform: rotateZ(90deg) translate(50px, 50px);
      opacity: 1 - calc(2 / 8);
      width: $animated-circle-radius - calc($animated-circle-radius * (2 / 8));
      height: $animated-circle-radius - calc($animated-circle-radius * (2 / 8));
    }

    37% {
      transform: rotateZ(135deg) translate(50px, 50px);
      opacity: 1 - calc(3 / 8);
      width: $animated-circle-radius - calc($animated-circle-radius * (3 / 8));
      height: $animated-circle-radius - calc($animated-circle-radius * (3 / 8));
    }

    50% {
      transform: rotateZ(180deg) translate(50px, 50px);
      opacity: 1 - calc(4 / 8);
      width: $animated-circle-radius - calc($animated-circle-radius * (4 / 8));
      height: $animated-circle-radius - calc($animated-circle-radius * (4 / 8));
    }

    62% {
      transform: rotateZ(225deg) translate(50px, 50px);
      opacity: 1 - calc(5 / 8);
      width: $animated-circle-radius - calc($animated-circle-radius * (5 / 8));
      height: $animated-circle-radius - calc($animated-circle-radius * (5 / 8));
    }

    75% {
      transform: rotateZ(270deg) translate(50px, 50px);
      opacity: 1 - calc(6 / 8);
      width: $animated-circle-radius - calc($animated-circle-radius * (6 / 8));
      height: $animated-circle-radius - calc($animated-circle-radius * (6 / 8));
    }

    87% {
      transform: rotateZ(315deg) translate(50px, 50px);
      opacity: 1 - calc(6.5 / 8);
      width: $animated-circle-radius - calc($animated-circle-radius * (6.5 / 8));
      height: $animated-circle-radius - calc($animated-circle-radius * (6.5 / 8));
    }

    100% {
      transform: rotateZ(350deg) translate(50px, 50px);
      opacity: 1 - calc(7 / 8);
      width: $animated-circle-radius - calc($animated-circle-radius * (7 / 8));
      height: $animated-circle-radius - calc($animated-circle-radius * (7 / 8));
    }
}
  
/*
 * -------------------------------------------------------------------------------------
 * -- Border Mouse Interaction
*/

$animated-border-color: rgb(170, 15, 150);

.animated_border {
  position: relative;
  width: 728px;
  height: 512px;
  border-color: $animated-border-color;
  border-style: solid;
  border-width: 2px;
  box-shadow: 0 0 0 0 $animated-border-color;
  border-radius: 30px;

  transition: border-top-color border-bottom-color border-left-color border-right-color 0.25s ease-in;
  transition: box-shadow 0.1s linear;
}